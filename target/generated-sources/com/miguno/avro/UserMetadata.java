/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.miguno.avro;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class UserMetadata extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1512313159698610456L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserMetadata\",\"namespace\":\"com.miguno.avro\",\"fields\":[{\"name\":\"followers_count\",\"type\":\"int\",\"doc\":\"Number of followers the user has\"},{\"name\":\"following_count\",\"type\":\"int\",\"doc\":\"Number of accounts the user is following\"},{\"name\":\"account_created\",\"type\":\"long\",\"doc\":\"Unix epoch time in milliseconds when the account was created\"},{\"name\":\"verified\",\"type\":\"boolean\",\"doc\":\"Whether the user account is verified\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<UserMetadata> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<UserMetadata> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<UserMetadata> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<UserMetadata> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<UserMetadata> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this UserMetadata to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a UserMetadata from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a UserMetadata instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static UserMetadata fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Number of followers the user has */
  private int followers_count;
  /** Number of accounts the user is following */
  private int following_count;
  /** Unix epoch time in milliseconds when the account was created */
  private long account_created;
  /** Whether the user account is verified */
  private boolean verified;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public UserMetadata() {}

  /**
   * All-args constructor.
   * @param followers_count Number of followers the user has
   * @param following_count Number of accounts the user is following
   * @param account_created Unix epoch time in milliseconds when the account was created
   * @param verified Whether the user account is verified
   */
  public UserMetadata(java.lang.Integer followers_count, java.lang.Integer following_count, java.lang.Long account_created, java.lang.Boolean verified) {
    this.followers_count = followers_count;
    this.following_count = following_count;
    this.account_created = account_created;
    this.verified = verified;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return followers_count;
    case 1: return following_count;
    case 2: return account_created;
    case 3: return verified;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: followers_count = (java.lang.Integer)value$; break;
    case 1: following_count = (java.lang.Integer)value$; break;
    case 2: account_created = (java.lang.Long)value$; break;
    case 3: verified = (java.lang.Boolean)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'followers_count' field.
   * @return Number of followers the user has
   */
  public int getFollowersCount() {
    return followers_count;
  }


  /**
   * Sets the value of the 'followers_count' field.
   * Number of followers the user has
   * @param value the value to set.
   */
  public void setFollowersCount(int value) {
    this.followers_count = value;
  }

  /**
   * Gets the value of the 'following_count' field.
   * @return Number of accounts the user is following
   */
  public int getFollowingCount() {
    return following_count;
  }


  /**
   * Sets the value of the 'following_count' field.
   * Number of accounts the user is following
   * @param value the value to set.
   */
  public void setFollowingCount(int value) {
    this.following_count = value;
  }

  /**
   * Gets the value of the 'account_created' field.
   * @return Unix epoch time in milliseconds when the account was created
   */
  public long getAccountCreated() {
    return account_created;
  }


  /**
   * Sets the value of the 'account_created' field.
   * Unix epoch time in milliseconds when the account was created
   * @param value the value to set.
   */
  public void setAccountCreated(long value) {
    this.account_created = value;
  }

  /**
   * Gets the value of the 'verified' field.
   * @return Whether the user account is verified
   */
  public boolean getVerified() {
    return verified;
  }


  /**
   * Sets the value of the 'verified' field.
   * Whether the user account is verified
   * @param value the value to set.
   */
  public void setVerified(boolean value) {
    this.verified = value;
  }

  /**
   * Creates a new UserMetadata RecordBuilder.
   * @return A new UserMetadata RecordBuilder
   */
  public static com.miguno.avro.UserMetadata.Builder newBuilder() {
    return new com.miguno.avro.UserMetadata.Builder();
  }

  /**
   * Creates a new UserMetadata RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new UserMetadata RecordBuilder
   */
  public static com.miguno.avro.UserMetadata.Builder newBuilder(com.miguno.avro.UserMetadata.Builder other) {
    if (other == null) {
      return new com.miguno.avro.UserMetadata.Builder();
    } else {
      return new com.miguno.avro.UserMetadata.Builder(other);
    }
  }

  /**
   * Creates a new UserMetadata RecordBuilder by copying an existing UserMetadata instance.
   * @param other The existing instance to copy.
   * @return A new UserMetadata RecordBuilder
   */
  public static com.miguno.avro.UserMetadata.Builder newBuilder(com.miguno.avro.UserMetadata other) {
    if (other == null) {
      return new com.miguno.avro.UserMetadata.Builder();
    } else {
      return new com.miguno.avro.UserMetadata.Builder(other);
    }
  }

  /**
   * RecordBuilder for UserMetadata instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserMetadata>
    implements org.apache.avro.data.RecordBuilder<UserMetadata> {

    /** Number of followers the user has */
    private int followers_count;
    /** Number of accounts the user is following */
    private int following_count;
    /** Unix epoch time in milliseconds when the account was created */
    private long account_created;
    /** Whether the user account is verified */
    private boolean verified;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.miguno.avro.UserMetadata.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.followers_count)) {
        this.followers_count = data().deepCopy(fields()[0].schema(), other.followers_count);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.following_count)) {
        this.following_count = data().deepCopy(fields()[1].schema(), other.following_count);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.account_created)) {
        this.account_created = data().deepCopy(fields()[2].schema(), other.account_created);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.verified)) {
        this.verified = data().deepCopy(fields()[3].schema(), other.verified);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing UserMetadata instance
     * @param other The existing instance to copy.
     */
    private Builder(com.miguno.avro.UserMetadata other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.followers_count)) {
        this.followers_count = data().deepCopy(fields()[0].schema(), other.followers_count);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.following_count)) {
        this.following_count = data().deepCopy(fields()[1].schema(), other.following_count);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.account_created)) {
        this.account_created = data().deepCopy(fields()[2].schema(), other.account_created);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.verified)) {
        this.verified = data().deepCopy(fields()[3].schema(), other.verified);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'followers_count' field.
      * Number of followers the user has
      * @return The value.
      */
    public int getFollowersCount() {
      return followers_count;
    }


    /**
      * Sets the value of the 'followers_count' field.
      * Number of followers the user has
      * @param value The value of 'followers_count'.
      * @return This builder.
      */
    public com.miguno.avro.UserMetadata.Builder setFollowersCount(int value) {
      validate(fields()[0], value);
      this.followers_count = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'followers_count' field has been set.
      * Number of followers the user has
      * @return True if the 'followers_count' field has been set, false otherwise.
      */
    public boolean hasFollowersCount() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'followers_count' field.
      * Number of followers the user has
      * @return This builder.
      */
    public com.miguno.avro.UserMetadata.Builder clearFollowersCount() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'following_count' field.
      * Number of accounts the user is following
      * @return The value.
      */
    public int getFollowingCount() {
      return following_count;
    }


    /**
      * Sets the value of the 'following_count' field.
      * Number of accounts the user is following
      * @param value The value of 'following_count'.
      * @return This builder.
      */
    public com.miguno.avro.UserMetadata.Builder setFollowingCount(int value) {
      validate(fields()[1], value);
      this.following_count = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'following_count' field has been set.
      * Number of accounts the user is following
      * @return True if the 'following_count' field has been set, false otherwise.
      */
    public boolean hasFollowingCount() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'following_count' field.
      * Number of accounts the user is following
      * @return This builder.
      */
    public com.miguno.avro.UserMetadata.Builder clearFollowingCount() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'account_created' field.
      * Unix epoch time in milliseconds when the account was created
      * @return The value.
      */
    public long getAccountCreated() {
      return account_created;
    }


    /**
      * Sets the value of the 'account_created' field.
      * Unix epoch time in milliseconds when the account was created
      * @param value The value of 'account_created'.
      * @return This builder.
      */
    public com.miguno.avro.UserMetadata.Builder setAccountCreated(long value) {
      validate(fields()[2], value);
      this.account_created = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'account_created' field has been set.
      * Unix epoch time in milliseconds when the account was created
      * @return True if the 'account_created' field has been set, false otherwise.
      */
    public boolean hasAccountCreated() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'account_created' field.
      * Unix epoch time in milliseconds when the account was created
      * @return This builder.
      */
    public com.miguno.avro.UserMetadata.Builder clearAccountCreated() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'verified' field.
      * Whether the user account is verified
      * @return The value.
      */
    public boolean getVerified() {
      return verified;
    }


    /**
      * Sets the value of the 'verified' field.
      * Whether the user account is verified
      * @param value The value of 'verified'.
      * @return This builder.
      */
    public com.miguno.avro.UserMetadata.Builder setVerified(boolean value) {
      validate(fields()[3], value);
      this.verified = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'verified' field has been set.
      * Whether the user account is verified
      * @return True if the 'verified' field has been set, false otherwise.
      */
    public boolean hasVerified() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'verified' field.
      * Whether the user account is verified
      * @return This builder.
      */
    public com.miguno.avro.UserMetadata.Builder clearVerified() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public UserMetadata build() {
      try {
        UserMetadata record = new UserMetadata();
        record.followers_count = fieldSetFlags()[0] ? this.followers_count : (java.lang.Integer) defaultValue(fields()[0]);
        record.following_count = fieldSetFlags()[1] ? this.following_count : (java.lang.Integer) defaultValue(fields()[1]);
        record.account_created = fieldSetFlags()[2] ? this.account_created : (java.lang.Long) defaultValue(fields()[2]);
        record.verified = fieldSetFlags()[3] ? this.verified : (java.lang.Boolean) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<UserMetadata>
    WRITER$ = (org.apache.avro.io.DatumWriter<UserMetadata>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<UserMetadata>
    READER$ = (org.apache.avro.io.DatumReader<UserMetadata>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.followers_count);

    out.writeInt(this.following_count);

    out.writeLong(this.account_created);

    out.writeBoolean(this.verified);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.followers_count = in.readInt();

      this.following_count = in.readInt();

      this.account_created = in.readLong();

      this.verified = in.readBoolean();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.followers_count = in.readInt();
          break;

        case 1:
          this.following_count = in.readInt();
          break;

        case 2:
          this.account_created = in.readLong();
          break;

        case 3:
          this.verified = in.readBoolean();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










